{"ast":null,"code":"// src/api/apiService.js\nimport axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Create an axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Menu services\nexport const menuService = {\n  getAllItems: async () => {\n    try {\n      const response = await api.get('/menu');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching menu items:', error);\n      throw error;\n    }\n  },\n  getItemsByCategory: async category => {\n    try {\n      const response = await api.get(`/menu/category/${category}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching ${category} items:`, error);\n      throw error;\n    }\n  },\n  getItemById: async id => {\n    try {\n      const response = await api.get(`/menu/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching menu item:', error);\n      throw error;\n    }\n  }\n};\n\n// Order services\nexport const orderService = {\n  createOrder: async orderData => {\n    try {\n      const response = await api.post('/orders', orderData);\n      return response.data;\n    } catch (error) {\n      console.error('Error creating order:', error);\n      throw error;\n    }\n  },\n  getOrdersByPhone: async phone => {\n    try {\n      const response = await api.get(`/orders/customer/${phone}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching orders:', error);\n      throw error;\n    }\n  },\n  getOrderById: async id => {\n    try {\n      const response = await api.get(`/orders/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching order:', error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","menuService","getAllItems","response","get","data","error","console","getItemsByCategory","category","getItemById","id","orderService","createOrder","orderData","post","getOrdersByPhone","phone","getOrderById"],"sources":["D:/eatoes/digital-diner-frontend/src/api/apiService.js"],"sourcesContent":["// src/api/apiService.js\r\nimport axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// Create an axios instance\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// Menu services\r\nexport const menuService = {\r\n  getAllItems: async () => {\r\n    try {\r\n      const response = await api.get('/menu');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching menu items:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  getItemsByCategory: async (category) => {\r\n    try {\r\n      const response = await api.get(`/menu/category/${category}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error fetching ${category} items:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  getItemById: async (id) => {\r\n    try {\r\n      const response = await api.get(`/menu/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching menu item:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\n// Order services\r\nexport const orderService = {\r\n  createOrder: async (orderData) => {\r\n    try {\r\n      const response = await api.post('/orders', orderData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error creating order:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  getOrdersByPhone: async (phone) => {\r\n    try {\r\n      const response = await api.get(`/orders/customer/${phone}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching orders:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  getOrderById: async (id) => {\r\n    try {\r\n      const response = await api.get(`/orders/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching order:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;;AAEjF;AACA,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,WAAW,GAAG;EACzBC,WAAW,EAAE,MAAAA,CAAA,KAAY;IACvB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,OAAO,CAAC;MACvC,OAAOD,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,MAAMA,KAAK;IACb;EACF,CAAC;EAEDE,kBAAkB,EAAE,MAAOC,QAAQ,IAAK;IACtC,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,kBAAkBK,QAAQ,EAAE,CAAC;MAC5D,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kBAAkBG,QAAQ,SAAS,EAAEH,KAAK,CAAC;MACzD,MAAMA,KAAK;IACb;EACF,CAAC;EAEDI,WAAW,EAAE,MAAOC,EAAE,IAAK;IACzB,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,SAASO,EAAE,EAAE,CAAC;MAC7C,OAAOR,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,MAAMA,KAAK;IACb;EACF;AACF,CAAC;;AAED;AACA,OAAO,MAAMM,YAAY,GAAG;EAC1BC,WAAW,EAAE,MAAOC,SAAS,IAAK;IAChC,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMN,GAAG,CAACkB,IAAI,CAAC,SAAS,EAAED,SAAS,CAAC;MACrD,OAAOX,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMA,KAAK;IACb;EACF,CAAC;EAEDU,gBAAgB,EAAE,MAAOC,KAAK,IAAK;IACjC,IAAI;MACF,MAAMd,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,oBAAoBa,KAAK,EAAE,CAAC;MAC3D,OAAOd,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,MAAMA,KAAK;IACb;EACF,CAAC;EAEDY,YAAY,EAAE,MAAOP,EAAE,IAAK;IAC1B,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,WAAWO,EAAE,EAAE,CAAC;MAC/C,OAAOR,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMA,KAAK;IACb;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}