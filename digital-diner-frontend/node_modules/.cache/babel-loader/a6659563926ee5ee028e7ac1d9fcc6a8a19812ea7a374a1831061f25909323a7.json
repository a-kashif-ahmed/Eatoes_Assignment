{"ast":null,"code":"var _jsxFileName = \"D:\\\\eatoes\\\\digital-diner-frontend\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/CartContext.js\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\n\n// Initial state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  items: [],\n  total: 0\n};\n\n// Actions\nconst ADD_ITEM = 'ADD_ITEM';\nconst REMOVE_ITEM = 'REMOVE_ITEM';\nconst UPDATE_QUANTITY = 'UPDATE_QUANTITY';\nconst CLEAR_CART = 'CLEAR_CART';\n\n// Reducer\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case ADD_ITEM:\n      {\n        const existingItemIndex = state.items.findIndex(item => item.id === action.payload.id);\n        if (existingItemIndex >= 0) {\n          // Item exists, update quantity\n          const updatedItems = [...state.items];\n          updatedItems[existingItemIndex].quantity += 1;\n          return {\n            ...state,\n            items: updatedItems,\n            total: calculateTotal(updatedItems)\n          };\n        } else {\n          // Add new item with quantity 1\n          const newItem = {\n            ...action.payload,\n            quantity: 1\n          };\n          return {\n            ...state,\n            items: [...state.items, newItem],\n            total: calculateTotal([...state.items, newItem])\n          };\n        }\n      }\n    case REMOVE_ITEM:\n      {\n        const filteredItems = state.items.filter(item => item.id !== action.payload);\n        return {\n          ...state,\n          items: filteredItems,\n          total: calculateTotal(filteredItems)\n        };\n      }\n    case UPDATE_QUANTITY:\n      {\n        const {\n          id,\n          quantity\n        } = action.payload;\n        if (quantity <= 0) {\n          // If quantity is zero or negative, remove the item\n          return cartReducer(state, {\n            type: REMOVE_ITEM,\n            payload: id\n          });\n        }\n        const updatedItems = state.items.map(item => item.id === id ? {\n          ...item,\n          quantity\n        } : item);\n        return {\n          ...state,\n          items: updatedItems,\n          total: calculateTotal(updatedItems)\n        };\n      }\n    case CLEAR_CART:\n      return initialState;\n    default:\n      return state;\n  }\n};\n\n// Helper function to calculate total\nconst calculateTotal = items => {\n  return items.reduce((sum, item) => sum + item.price * item.quantity, 0);\n};\n\n// Create context\nconst CartContext = /*#__PURE__*/createContext();\n\n// Cart provider component\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  // Try to get cart from localStorage\n  const getInitialState = () => {\n    const savedCart = localStorage.getItem('cart');\n    return savedCart ? JSON.parse(savedCart) : initialState;\n  };\n  const [state, dispatch] = useReducer(cartReducer, getInitialState());\n\n  // Save cart to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(state));\n  }, [state]);\n\n  // Actions\n  const addItem = item => {\n    dispatch({\n      type: ADD_ITEM,\n      payload: item\n    });\n  };\n  const removeItem = itemId => {\n    dispatch({\n      type: REMOVE_ITEM,\n      payload: itemId\n    });\n  };\n  const updateQuantity = (itemId, quantity) => {\n    dispatch({\n      type: UPDATE_QUANTITY,\n      payload: {\n        id: itemId,\n        quantity\n      }\n    });\n  };\n  const clearCart = () => {\n    dispatch({\n      type: CLEAR_CART\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      items: state.items,\n      total: state.total,\n      addItem,\n      removeItem,\n      updateQuantity,\n      clearCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use cart context\n_s(CartProvider, \"ZhKy+pGuhSnYO+lrhULvLXYYCPE=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsxDEV","_jsxDEV","initialState","items","total","ADD_ITEM","REMOVE_ITEM","UPDATE_QUANTITY","CLEAR_CART","cartReducer","state","action","type","existingItemIndex","findIndex","item","id","payload","updatedItems","quantity","calculateTotal","newItem","filteredItems","filter","map","reduce","sum","price","CartContext","CartProvider","children","_s","getInitialState","savedCart","localStorage","getItem","JSON","parse","dispatch","setItem","stringify","addItem","removeItem","itemId","updateQuantity","clearCart","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","Error","$RefreshReg$"],"sources":["D:/eatoes/digital-diner-frontend/src/context/CartContext.js"],"sourcesContent":["// src/context/CartContext.js\r\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  items: [],\r\n  total: 0\r\n};\r\n\r\n// Actions\r\nconst ADD_ITEM = 'ADD_ITEM';\r\nconst REMOVE_ITEM = 'REMOVE_ITEM';\r\nconst UPDATE_QUANTITY = 'UPDATE_QUANTITY';\r\nconst CLEAR_CART = 'CLEAR_CART';\r\n\r\n// Reducer\r\nconst cartReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_ITEM: {\r\n      const existingItemIndex = state.items.findIndex(\r\n        item => item.id === action.payload.id\r\n      );\r\n      \r\n      if (existingItemIndex >= 0) {\r\n        // Item exists, update quantity\r\n        const updatedItems = [...state.items];\r\n        updatedItems[existingItemIndex].quantity += 1;\r\n        \r\n        return {\r\n          ...state,\r\n          items: updatedItems,\r\n          total: calculateTotal(updatedItems)\r\n        };\r\n      } else {\r\n        // Add new item with quantity 1\r\n        const newItem = { ...action.payload, quantity: 1 };\r\n        return {\r\n          ...state,\r\n          items: [...state.items, newItem],\r\n          total: calculateTotal([...state.items, newItem])\r\n        };\r\n      }\r\n    }\r\n    \r\n    case REMOVE_ITEM: {\r\n      const filteredItems = state.items.filter(\r\n        item => item.id !== action.payload\r\n      );\r\n      \r\n      return {\r\n        ...state,\r\n        items: filteredItems,\r\n        total: calculateTotal(filteredItems)\r\n      };\r\n    }\r\n    \r\n    case UPDATE_QUANTITY: {\r\n      const { id, quantity } = action.payload;\r\n      \r\n      if (quantity <= 0) {\r\n        // If quantity is zero or negative, remove the item\r\n        return cartReducer(state, { type: REMOVE_ITEM, payload: id });\r\n      }\r\n      \r\n      const updatedItems = state.items.map(item => \r\n        item.id === id ? { ...item, quantity } : item\r\n      );\r\n      \r\n      return {\r\n        ...state,\r\n        items: updatedItems,\r\n        total: calculateTotal(updatedItems)\r\n      };\r\n    }\r\n    \r\n    case CLEAR_CART:\r\n      return initialState;\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Helper function to calculate total\r\nconst calculateTotal = (items) => {\r\n  return items.reduce(\r\n    (sum, item) => sum + (item.price * item.quantity), \r\n    0\r\n  );\r\n};\r\n\r\n// Create context\r\nconst CartContext = createContext();\r\n\r\n// Cart provider component\r\nexport const CartProvider = ({ children }) => {\r\n  // Try to get cart from localStorage\r\n  const getInitialState = () => {\r\n    const savedCart = localStorage.getItem('cart');\r\n    return savedCart ? JSON.parse(savedCart) : initialState;\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(cartReducer, getInitialState());\r\n  \r\n  // Save cart to localStorage whenever it changes\r\n  useEffect(() => {\r\n    localStorage.setItem('cart', JSON.stringify(state));\r\n  }, [state]);\r\n  \r\n  // Actions\r\n  const addItem = (item) => {\r\n    dispatch({ type: ADD_ITEM, payload: item });\r\n  };\r\n  \r\n  const removeItem = (itemId) => {\r\n    dispatch({ type: REMOVE_ITEM, payload: itemId });\r\n  };\r\n  \r\n  const updateQuantity = (itemId, quantity) => {\r\n    dispatch({ \r\n      type: UPDATE_QUANTITY, \r\n      payload: { id: itemId, quantity }\r\n    });\r\n  };\r\n  \r\n  const clearCart = () => {\r\n    dispatch({ type: CLEAR_CART });\r\n  };\r\n  \r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        items: state.items,\r\n        total: state.total,\r\n        addItem,\r\n        removeItem,\r\n        updateQuantity,\r\n        clearCart\r\n      }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use cart context\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error('useCart must be used within a CartProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}